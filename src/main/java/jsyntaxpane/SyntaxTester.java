/*
 * Copyright 2008 Ayman Al-Sairafi ayman.alsairafi@gmail.com
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); 
 * you may not use this file except in compliance with the License. 
 * You may obtain a copy of the License 
 *       at http://www.apache.org/licenses/LICENSE-2.0 
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 * See the License for the specific language governing permissions and 
 * limitations under the License.  
 */
package jsyntaxpane;

import java.awt.event.ItemEvent;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.Rectangle;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import javax.swing.text.BadLocationException;
import jsyntaxpane.actions.CaretMonitor;

public class SyntaxTester extends javax.swing.JFrame
{

	private JPanel panel = new JPanel();

	/** Creates new form Tester */
	public SyntaxTester()
	{
		DefaultSyntaxKit.initKit();
		initComponents();
		jCmbLangs.setModel(new DefaultComboBoxModel(DefaultSyntaxKit
				.getContentTypes()));
		// jEdtTest.setContentType(jCmbLangs.getItemAt(0).toString());
		jCmbLangs.setSelectedItem("text/java");
		new CaretMonitor(jEdtTest, lblCaretPos);
	}

	private void setColumnMinWidth(GridBagLayout gbl, int c, int w)
	{
		int[] ws = gbl.columnWidths;
		if (ws == null)
		{
			ws = new int[c + 1];
		} else if (ws.length < c + 1)
		{
			ws = new int[c + 1];
			System.arraycopy(gbl.columnWidths, 0, ws, 0,
					gbl.columnWidths.length);
		}
		ws[c] = w;
		gbl.columnWidths = ws;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents()
	{

		lblCaretPos = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jEdtTest = new javax.swing.JEditorPane();
		lblToken = new javax.swing.JLabel();
		jCmbLangs = new javax.swing.JComboBox();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("JSyntaxPane Tester");

		lblCaretPos.setText("Caret Position");

		jEdtTest.setContentType("");
		jEdtTest.setFont(new java.awt.Font("Monospaced", 0, 13));
		jEdtTest.addCaretListener(new javax.swing.event.CaretListener() {
			public void caretUpdate(javax.swing.event.CaretEvent evt)
			{
				jEdtTestCaretUpdate(evt);
			}
		});
		
		jScrollPane1.setViewportView(jEdtTest);
		//jScrollPane1.setPreferredSize(new Dimension(800,800));
		

		lblToken.setFont(new java.awt.Font("Courier New", 0, 12));
		lblToken.setText("Token under cursor");

		jCmbLangs.setMaximumRowCount(20);
		jCmbLangs.setFocusable(false);
		jCmbLangs.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt)
			{
				jCmbLangsItemStateChanged(evt);
			}
		});

		GridBagLayout gridBag = new GridBagLayout();
		GridBagConstraints c = new GridBagConstraints();
		c.insets = new Insets(5, 5, 5, 5);
		//setColumnMinWidth(gridBag, 0, 400);
		//setColumnMinWidth(gridBag, 1, 400);

		jScrollPane1.setPreferredSize(new Dimension(600, 600));
		panel.add(jScrollPane1);
		c.gridx = 0;
		c.gridy = 0;
		c.gridwidth = 2;
		c.gridheight = 1;
		//c.anchor = GridBagConstraints.EAST;
		c.fill = GridBagConstraints.BOTH;
		gridBag.setConstraints(jScrollPane1, c);

		panel.add(lblToken);
		c.gridx = 0;
		c.gridy = 1;
		c.gridwidth = 1;
		c.gridheight = 1;
		//c.anchor = GridBagConstraints.WEST;
		//c.fill = GridBagConstraints.NONE;
		gridBag.setConstraints(lblToken, c);

		panel.add(lblCaretPos);
		c.gridx = 1;
		c.gridy = 1;
		c.gridwidth = 1;
		c.gridheight = 1;
		//c.anchor = GridBagConstraints.EAST;
		//c.fill = GridBagConstraints.NONE;
		gridBag.setConstraints(lblCaretPos, c);

		panel.add(jCmbLangs);
		c.gridx = 0;
		c.gridy = 2;
		//c.anchor = GridBagConstraints.WEST;
		//c.fill = GridBagConstraints.NONE;
		gridBag.setConstraints(jCmbLangs, c);

		panel.setLayout(gridBag);
		this.add(panel);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jEdtTestCaretUpdate(javax.swing.event.CaretEvent evt)
	{// GEN-FIRST:event_jEdtTestCaretUpdate
		if (jEdtTest.getDocument() instanceof SyntaxDocument)
		{
			SyntaxDocument sDoc = (SyntaxDocument) jEdtTest.getDocument();
			Token t = sDoc.getTokenAt(evt.getDot());
			if (t != null)
			{
				try
				{
					String tData = sDoc
							.getText(t.start, Math.min(t.length, 40));
					if (t.length > 40)
					{
						tData += "...";
					}
					lblToken.setText(t.toString() + ": " + tData);
				} catch (BadLocationException ex)
				{
					// should not happen.. and if it does, just ignore it
					System.err.println(ex);
					ex.printStackTrace();
				}
			}
		}

	}// GEN-LAST:event_jEdtTestCaretUpdate

	private void jCmbLangsItemStateChanged(java.awt.event.ItemEvent evt)
	{// GEN-FIRST:event_jCmbLangsItemStateChanged
		if (evt.getStateChange() == ItemEvent.SELECTED)
		{
			String lang = jCmbLangs.getSelectedItem().toString();

			// save the state of the current JEditorPane, as it's Document is
			// about
			// to be replaced.
			String t = jEdtTest.getText();
			int caretPosition = jEdtTest.getCaretPosition();
			Rectangle visibleRectangle = jEdtTest.getVisibleRect();

			// install a new DefaultSyntaxKit on the JEditorPane for the
			// requested language.
			jEdtTest.setContentType(lang);

			// restore the state of the JEditorPane - note that installing a new
			// EditorKit causes the Document to be recreated.
			SyntaxDocument sDoc = (SyntaxDocument) jEdtTest.getDocument();
			jEdtTest.setText(t);
			sDoc.clearUndos();
			jEdtTest.setCaretPosition(caretPosition);
			jEdtTest.scrollRectToVisible(visibleRectangle);
		}
	}// GEN-LAST:event_jCmbLangsItemStateChanged

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[])
	{
		java.awt.EventQueue.invokeLater(new Runnable() {

			// @Override
			public void run()
			{
				new SyntaxTester().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JComboBox jCmbLangs;
	private javax.swing.JEditorPane jEdtTest;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JLabel lblCaretPos;
	private javax.swing.JLabel lblToken;
	// End of variables declaration//GEN-END:variables
}
